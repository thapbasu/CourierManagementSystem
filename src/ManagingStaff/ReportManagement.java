package ManagingStaff;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Date;
import java.util.Scanner;

public class ReportManagement extends javax.swing.JFrame {

    String Name, UID;
    int u, c, d, m, ds,delo;
    int currentDay;

    public ReportManagement() {
        initComponents();
    }

    ReportManagement(String Name, String UID) {
        this.Name = Name;
        this.UID = UID;
        initComponents();
        ALLTIME();
        txttoalcourier.setEditable(false);
        txttotaluser.setEditable(false);
        txttotaldelivery.setEditable(false);
        txttotalmanaging.setEditable(false);
        txttotaldeliverystaff.setEditable(false);
        txttotalcancelledorder.setEditable(false);
        Username.setText("Welcome, " + Name);

    }

    private void ALLTIME() {
        u = managereport.GetTotalusers();
        String totaluser = String.valueOf(u);
        txttotaluser.setText(totaluser);

        c = managereport.GetTotalCouriers();
        String totalcourier = String.valueOf(c);
        txttoalcourier.setText(totalcourier);

        d = managereport.GetTotalDelivery();
        String totaldelivery = String.valueOf(d);
        txttotaldelivery.setText(totaldelivery);
        m = managereport.GetTotalManagingStaffs();
        String totalmanaging = String.valueOf(m);
        txttotalmanaging.setText(totalmanaging);

        ds = managereport.GetTotalDeliveryStaffs();
        String totaldeliverystaff = String.valueOf(ds);
        txttotaldeliverystaff.setText(totaldeliverystaff);
        
        delo = managereport.GetTotalCancelledOrders();
        String totalDeletedOrders = String.valueOf(delo);
        txttotalcancelledorder.setText(totalDeletedOrders);
    }

    public class managereport extends ForReport {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        OID2 = new javax.swing.JTextField();
        all2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txttotaluser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txttoalcourier = new javax.swing.JTextField();
        txttotaldelivery = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txttotalmanaging = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txttotaldeliverystaff = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        editdetails = new javax.swing.JButton();
        editdetails2 = new javax.swing.JButton();
        all = new javax.swing.JButton();
        daily = new javax.swing.JButton();
        Monthly = new javax.swing.JButton();
        yearly = new javax.swing.JButton();
        txttotalcancelledorder = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        rSButtonHover3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Username = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Total Courier:");

        OID2.setBackground(new java.awt.Color(255, 255, 255));
        OID2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        OID2.setForeground(new java.awt.Color(0, 0, 0));
        OID2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OID2ActionPerformed(evt);
            }
        });

        all2.setBackground(new java.awt.Color(255, 255, 255));
        all2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        all2.setForeground(new java.awt.Color(25, 118, 211));
        all2.setText("Daily");
        all2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Total Users:");

        txttotaluser.setBackground(new java.awt.Color(255, 255, 255));
        txttotaluser.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txttotaluser.setForeground(new java.awt.Color(0, 0, 0));
        txttotaluser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotaluserActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Total Courier:");

        txttoalcourier.setBackground(new java.awt.Color(255, 255, 255));
        txttoalcourier.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txttoalcourier.setForeground(new java.awt.Color(0, 0, 0));
        txttoalcourier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttoalcourierActionPerformed(evt);
            }
        });

        txttotaldelivery.setBackground(new java.awt.Color(255, 255, 255));
        txttotaldelivery.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txttotaldelivery.setForeground(new java.awt.Color(0, 0, 0));
        txttotaldelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotaldeliveryActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Total Delivery:");

        txttotalmanaging.setBackground(new java.awt.Color(255, 255, 255));
        txttotalmanaging.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txttotalmanaging.setForeground(new java.awt.Color(0, 0, 0));
        txttotalmanaging.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalmanagingActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Total Managing Staffs:");

        txttotaldeliverystaff.setBackground(new java.awt.Color(255, 255, 255));
        txttotaldeliverystaff.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txttotaldeliverystaff.setForeground(new java.awt.Color(0, 0, 0));
        txttotaldeliverystaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotaldeliverystaffActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Total Delivery Staffs:");

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("VIEW DETAILED REPORT");
        jLabel14.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        editdetails.setBackground(new java.awt.Color(255, 255, 255));
        editdetails.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editdetails.setForeground(new java.awt.Color(25, 118, 211));
        editdetails.setIcon(new javax.swing.ImageIcon("C:\\Users\\thapa\\Downloads\\icons8-courier-64.png")); // NOI18N
        editdetails.setText("COURIER REPORT");
        editdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editdetailsActionPerformed(evt);
            }
        });

        editdetails2.setBackground(new java.awt.Color(255, 255, 255));
        editdetails2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editdetails2.setForeground(new java.awt.Color(25, 118, 211));
        editdetails2.setIcon(new javax.swing.ImageIcon("C:\\Users\\thapa\\Downloads\\delivery-truck.png")); // NOI18N
        editdetails2.setText("DELIVERY REPORT");
        editdetails2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editdetails2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editdetails2ActionPerformed(evt);
            }
        });

        all.setBackground(new java.awt.Color(255, 255, 255));
        all.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        all.setForeground(new java.awt.Color(25, 118, 211));
        all.setText("All time");
        all.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                allMouseExited(evt);
            }
        });
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });

        daily.setBackground(new java.awt.Color(255, 255, 255));
        daily.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        daily.setForeground(new java.awt.Color(25, 118, 211));
        daily.setText("Daily");
        daily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyActionPerformed(evt);
            }
        });

        Monthly.setBackground(new java.awt.Color(255, 255, 255));
        Monthly.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        Monthly.setForeground(new java.awt.Color(25, 118, 211));
        Monthly.setText("Monthly");
        Monthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyActionPerformed(evt);
            }
        });

        yearly.setBackground(new java.awt.Color(255, 255, 255));
        yearly.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        yearly.setForeground(new java.awt.Color(25, 118, 211));
        yearly.setText("Yearly");
        yearly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyActionPerformed(evt);
            }
        });

        txttotalcancelledorder.setBackground(new java.awt.Color(255, 255, 255));
        txttotalcancelledorder.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txttotalcancelledorder.setForeground(new java.awt.Color(0, 0, 0));
        txttotalcancelledorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalcancelledorderActionPerformed(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Total Cancelled Orders:");

        rSButtonHover3.setBackground(new java.awt.Color(255, 0, 0));
        rSButtonHover3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rSButtonHover3.setForeground(new java.awt.Color(255, 255, 255));
        rSButtonHover3.setIcon(new javax.swing.ImageIcon("C:\\Users\\thapa\\Downloads\\logout.png")); // NOI18N
        rSButtonHover3.setText(" Log out");
        rSButtonHover3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rSButtonHover3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover3ActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("ORDER REPORT DETAILS");
        jLabel17.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(211, 211, 211))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(all, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(daily, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(Monthly, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(yearly, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txttotalcancelledorder, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txttotaldelivery, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txttoalcourier, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jLabel17)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txttotalmanaging, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txttotaldeliverystaff, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txttotaluser, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(editdetails2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rSButtonHover3))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(editdetails, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttotalmanaging, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txttotaldeliverystaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel2)
                    .addComponent(txttotaluser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jLabel17)
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttoalcourier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttotaldelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttotalcancelledorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yearly)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(daily)
                        .addComponent(all)
                        .addComponent(Monthly)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(editdetails, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(editdetails2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rSButtonHover3)))
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 42, 616, 588));

        jPanel2.setBackground(new java.awt.Color(69, 69, 69));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("View User");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(16, 16, 16))
        );

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("View Order");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(15, 15, 15))
        );

        jPanel9.setBackground(new java.awt.Color(102, 102, 102));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(" Search");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(14, 14, 14))
        );

        jPanel10.setBackground(new java.awt.Color(102, 102, 102));

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(" Payment");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(14, 14, 14))
        );

        jPanel11.setBackground(new java.awt.Color(102, 102, 102));

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(" Track Order");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel14.setBackground(new java.awt.Color(255, 0, 0));

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("View Report");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(15, 15, 15))
        );

        jPanel16.setBackground(new java.awt.Color(102, 102, 102));

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Feedback");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel13)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 42, -1, 588));

        jPanel3.setBackground(new java.awt.Color(25, 118, 211));

        Username.setBackground(new java.awt.Color(25, 118, 211));
        Username.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        Username.setText("Welcome,");

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 51));
        jLabel15.setText("X");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(551, Short.MAX_VALUE)
                .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username)
                    .addComponent(jLabel15))
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 42));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txttotaluserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotaluserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotaluserActionPerformed

    private void txttoalcourierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttoalcourierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttoalcourierActionPerformed

    private void OID2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OID2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OID2ActionPerformed

    private void txttotaldeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotaldeliveryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotaldeliveryActionPerformed

    private void txttotalmanagingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalmanagingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalmanagingActionPerformed

    private void txttotaldeliverystaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotaldeliverystaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotaldeliverystaffActionPerformed

    private void editdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editdetailsActionPerformed
        this.setVisible(false);
        new CourierReport(Name, UID).setVisible(true);
    }//GEN-LAST:event_editdetailsActionPerformed

    private void editdetails2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editdetails2ActionPerformed
        this.setVisible(false);
        new DeliveryReport(Name, UID).setVisible(true);
    }//GEN-LAST:event_editdetails2ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        setVisible(false);
        new ViewAccounts(Name, UID).setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        this.setVisible(false);
        new ViewOrder(Name, UID).setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setVisible(false);
        new IdentifySearchUser(Name, UID).setVisible(true);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        this.setVisible(false);
        new Payment(Name, UID).setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        this.setVisible(false);
        new TrackOrder(Name, UID).setVisible(true);

    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        this.setVisible(false);
        new ReportManagement(Name, UID).setVisible(true);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        this.setVisible(false);
        new ViewFeedback(Name, UID).setVisible(true);
    }//GEN-LAST:event_jLabel13MouseClicked

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        ALLTIME();
        all.setBackground(new java.awt.Color(0, 102, 153));

        all.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        all.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_allActionPerformed

    private void fordailyTotalManagingStaff() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentDay = currentdate.getDayOfMonth();
        String cday = String.valueOf(currentDay);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\register.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\register.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[8])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotalmanaging.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }

    private void fordailyTotalDeliveryStaff() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentDay = currentdate.getDayOfMonth();
        String cday = String.valueOf(currentDay);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\Staffregister.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\Staffregister.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[8])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotaldeliverystaff.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
    private void fordailyTotalUsers() {
       LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentDay = currentdate.getDayOfMonth();
        String cday = String.valueOf(currentDay);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\Staffregister.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\Staffregister.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[8])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);


            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }
        
        //Getting the current day
        int count1 = 0;

        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\register.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\register.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[8])) {

                            count1++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();
               
            } catch (Exception e) {
                e.getStackTrace();
            }
        

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }
        String totalCount = String.valueOf(count+ count1);
            txttotaluser.setText(totalCount);

    }
      private void fordailyTotalCourier() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentDay = currentdate.getDayOfMonth();
        String cday = String.valueOf(currentDay);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\StoreAssignTask.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\StoreAssignTask.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[9])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttoalcourier.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
        private void fordailyTotalCancelledOrders() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentDay = currentdate.getDayOfMonth();
        String cday = String.valueOf(currentDay);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeletedOrder.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeletedOrder.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[7])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotalcancelledorder.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
     private void fordailyTotalDelivery() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentDay = currentdate.getDayOfMonth();
        String cday = String.valueOf(currentDay);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\AcceptTask.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\AcceptTask.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[13])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotaldelivery.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
  private void formonthlyTotalManagingStaff() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
   int currentMonth = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();
        String cmonth = String.valueOf(currentMonth);

        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\register.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\register.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cmonth.equals(array[9])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotalmanaging.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }

    private void formonthlyTotalDeliveryStaff() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentMonth = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();
        String cday = String.valueOf(currentMonth);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\Staffregister.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\Staffregister.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[9])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotaldeliverystaff.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
    private void formonthlyTotalUsers() {
       LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
       int currentMonth = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();
        String cday = String.valueOf(currentMonth);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\Staffregister.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\Staffregister.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[9])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);


            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }
        
        //Getting the current day
        int count1 = 0;

        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\register.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\register.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[9])) {

                            count1++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();
       
            } catch (Exception e) {
                e.getStackTrace();
            }
        

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }
            String totalCount = String.valueOf(count+ count1);
            txttotaluser.setText(totalCount);

    }
      private void formonthlyTotalCourier() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
          int currentMonth = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();
        String cday = String.valueOf(currentMonth);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\StoreAssignTask.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\StoreAssignTask.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[10])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttoalcourier.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
     private void formonthlyTotalDelivery() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
          int currentMonth = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();
        String cday = String.valueOf(currentMonth);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\AcceptTask.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\AcceptTask.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[14])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotaldelivery.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
        private void formonthlyTotalCancelledOrders() {

        //Getting the current day
        int count = 0;
          int currentMonth = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();
        String cday = String.valueOf(currentMonth);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeletedOrder.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeletedOrder.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[8])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotalcancelledorder.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
         private void foryearlyTotalManagingStaff() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
   int currentYear = currentdate.getYear();
        String cmonth = String.valueOf(currentYear);

        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\register.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\register.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cmonth.equals(array[10])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotalmanaging.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }

    private void foryearlyTotalDeliveryStaff() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
        int currentYear = currentdate.getYear();
        String cday = String.valueOf(currentYear);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\Staffregister.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\Staffregister.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[10])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotaldeliverystaff.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
    private void foryearlyTotalUsers() {
       LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
      int currentYear = currentdate.getYear();
        String cday = String.valueOf(currentYear);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\Staffregister.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\Staffregister.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[10])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);


            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }
        
        //Getting the current day
        int count1 = 0;

        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\register.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\register.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[10])) {

                            count1++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();
           
            } catch (Exception e) {
                e.getStackTrace();
            }
        

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }
       
 String totalCount = String.valueOf(count+ count1);
            txttotaluser.setText(totalCount);
    }
      private void foryearlyTotalCourier() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
         int currentYear = currentdate.getYear();
        String cday = String.valueOf(currentYear);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\StoreAssignTask.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\StoreAssignTask.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[11])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttoalcourier.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
     private void foryearlyTotalDelivery() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
       int currentYear = currentdate.getYear();
        String cday = String.valueOf(currentYear);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeliveryStaff\\AcceptTask.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeliveryStaff\\AcceptTask.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[15])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotaldelivery.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
        private void foryearlyTotalCancelledOrders() {

        LocalDate currentdate = LocalDate.now();
        //Getting the current day
        int count = 0;
           int currentYear = currentdate.getYear();
        String cday = String.valueOf(currentYear);
        System.out.println("Currrent day" + cday);
        try {

            String s;
            String[] array;

            RandomAccessFile raf = new RandomAccessFile("C:\\Java\\DeletedOrder.txt", "rw");

            System.out.println(count);

            try {
                File file = new File("C:\\Java\\DeletedOrder.txt");

                Scanner sc = new Scanner(file);
                while (sc.hasNextLine()) {
                    while ((s = raf.readLine()) != null) {
                        array = s.split(" ");
                        if (cday.equals(array[9])) {

                            count++;
                        }
                        sc.nextLine();
                    }

                }

                // close scanner
                sc.close();

            } catch (Exception e) {
                e.getStackTrace();
            }
            String c = String.valueOf(count);
            txttotalcancelledorder.setText(c);

            raf.close();
        } catch (IOException e10) {
            // TODO Auto-generated catch block
            e10.printStackTrace();
        }

    }
    private void dailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyActionPerformed
//        fordailyTotalManagingStaff();
//        fordailyTotalDeliveryStaff();
//        fordailyTotalUsers();
        fordailyTotalCourier();
        fordailyTotalDelivery();
        fordailyTotalCancelledOrders();

    }//GEN-LAST:event_dailyActionPerformed

    private void all2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_all2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_all2ActionPerformed

    private void yearlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyActionPerformed
//        foryearlyTotalManagingStaff();
//        foryearlyTotalDeliveryStaff();
//        foryearlyTotalUsers();
        foryearlyTotalCourier();
        foryearlyTotalDelivery();
        foryearlyTotalCancelledOrders();
    }//GEN-LAST:event_yearlyActionPerformed

    private void allMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseExited
        all.setBackground(new java.awt.Color(255, 255, 255));

        all.setForeground(new java.awt.Color(25, 118, 211));
    }//GEN-LAST:event_allMouseExited

    private void MonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyActionPerformed
//         formonthlyTotalManagingStaff();
//        formonthlyTotalDeliveryStaff();
//        formonthlyTotalUsers();
        formonthlyTotalCourier();
        formonthlyTotalDelivery();
        formonthlyTotalCancelledOrders();
    }//GEN-LAST:event_MonthlyActionPerformed

    private void txttotalcancelledorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalcancelledorderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalcancelledorderActionPerformed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel15MouseClicked

    private void rSButtonHover3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover3ActionPerformed
        this.setVisible(false);
        new Main().setVisible(true);
    }//GEN-LAST:event_rSButtonHover3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Monthly;
    private javax.swing.JTextField OID2;
    private javax.swing.JLabel Username;
    private javax.swing.JButton all;
    private javax.swing.JButton all2;
    private javax.swing.JButton daily;
    private javax.swing.JButton editdetails;
    private javax.swing.JButton editdetails2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton rSButtonHover3;
    private javax.swing.JTextField txttoalcourier;
    private javax.swing.JTextField txttotalcancelledorder;
    private javax.swing.JTextField txttotaldelivery;
    private javax.swing.JTextField txttotaldeliverystaff;
    private javax.swing.JTextField txttotalmanaging;
    private javax.swing.JTextField txttotaluser;
    private javax.swing.JButton yearly;
    // End of variables declaration//GEN-END:variables
}
